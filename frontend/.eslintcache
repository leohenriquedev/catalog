[{"C:\\development\\catalog\\frontend\\src\\index.js":"1","C:\\development\\catalog\\frontend\\src\\routes.js":"2","C:\\development\\catalog\\frontend\\src\\pages\\Catalog\\index.js":"3","C:\\development\\catalog\\frontend\\src\\components\\CarouselComponent\\index.js":"4","C:\\development\\catalog\\frontend\\src\\components\\Loading\\index.js":"5"},{"size":322,"mtime":1609530107825,"results":"6","hashOfConfig":"7"},{"size":360,"mtime":1609414405009,"results":"8","hashOfConfig":"7"},{"size":2388,"mtime":1609682535381,"results":"9","hashOfConfig":"7"},{"size":1722,"mtime":1609541819182,"results":"10","hashOfConfig":"7"},{"size":429,"mtime":1609684053323,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ssagvj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\development\\catalog\\frontend\\src\\index.js",[],["25","26"],"C:\\development\\catalog\\frontend\\src\\routes.js",[],"C:\\development\\catalog\\frontend\\src\\pages\\Catalog\\index.js",["27","28","29","30","31","32","33"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport CarouselComponent from '../../components/CarouselComponent';\r\nimport Loading from '../../components/Loading';\r\n\r\nexport default function Catalog() {\r\n\r\n    const isMounted = useRef(null);\r\n    const [maxProducts, setmaxProducts] = useState(16);\r\n    const [responseType, setresponseType] = useState('complete');\r\n    const [mostPopularIds, setmostPopularIds] = useState([]);\r\n    const [priceReductionIds, setpriceReductionIds] = useState([]);\r\n    const [mostPopular, setmostPopular] = useState([]);\r\n    const [priceReduction, setpriceReduction] = useState([]);\r\n    const [isLoading, setisLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        isMounted.current = true;\r\n\r\n        if(isMounted.current) {\r\n\r\n            axios.all([\r\n                axios.get('https://wishlist.neemu.com/onsite/impulse-core/ranking/mostpopular.json'),\r\n                axios.get('https://wishlist.neemu.com/onsite/impulse-core/ranking/pricereduction.json')\r\n    \r\n            ]).then(axios.spread((mostpopular, pricereduction) => {\r\n    \r\n                mostpopular.data.map((obj) => {\r\n                    mostPopularIds.push(obj.recommendedProduct.id);\r\n                });\r\n    \r\n                pricereduction.data.map((obj) => {\r\n                    priceReductionIds.push(obj.recommendedProduct.id);\r\n                });\r\n    \r\n                axios.post('http://localhost:3001/api/products', {\r\n                    maxProducts: maxProducts,\r\n                    responseType: responseType,\r\n                    mostPopularIds: mostPopularIds,\r\n                    priceReductionIds: priceReductionIds\r\n                }).then((response) => {\r\n                    setmostPopular(response.data.mostPopularProducts);\r\n                    setpriceReduction(response.data.priceReductionProducts);\r\n\r\n                    setisLoading(false);\r\n                });\r\n            }));\r\n\r\n        }\r\n\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Loading visible={isLoading} />\r\n\r\n            <CarouselComponent title=\"Mais Vendidos\" products={mostPopular} />\r\n            <CarouselComponent title=\"Produtos que baixaram de preÃ§o\" products={priceReduction} />\r\n\r\n        </React.Fragment>  \r\n    );\r\n}","C:\\development\\catalog\\frontend\\src\\components\\CarouselComponent\\index.js",[],["34","35"],"C:\\development\\catalog\\frontend\\src\\components\\Loading\\index.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":9,"column":25,"nodeType":"42","messageId":"43","endLine":9,"endColumn":39},{"ruleId":"40","severity":1,"message":"44","line":10,"column":26,"nodeType":"42","messageId":"43","endLine":10,"endColumn":41},{"ruleId":"40","severity":1,"message":"45","line":11,"column":28,"nodeType":"42","messageId":"43","endLine":11,"endColumn":45},{"ruleId":"40","severity":1,"message":"46","line":12,"column":31,"nodeType":"42","messageId":"43","endLine":12,"endColumn":51},{"ruleId":"47","severity":1,"message":"48","line":29,"column":44,"nodeType":"49","messageId":"50","endLine":29,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":33,"column":47,"nodeType":"49","messageId":"50","endLine":33,"endColumn":49},{"ruleId":"51","severity":1,"message":"52","line":56,"column":8,"nodeType":"53","endLine":56,"endColumn":10,"suggestions":"54"},{"ruleId":"36","replacedBy":"55"},{"ruleId":"38","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'setmaxProducts' is assigned a value but never used.","Identifier","unusedVar","'setresponseType' is assigned a value but never used.","'setmostPopularIds' is assigned a value but never used.","'setpriceReductionIds' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'maxProducts', 'mostPopularIds', 'priceReductionIds', and 'responseType'. Either include them or remove the dependency array.","ArrayExpression",["59"],["57"],["58"],"no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [maxProducts, mostPopularIds, priceReductionIds, responseType]",{"range":"62","text":"63"},[2073,2075],"[maxProducts, mostPopularIds, priceReductionIds, responseType]"]